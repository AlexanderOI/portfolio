---
import Card from "../../components/ui/card.astro";
import GitHubIcon from "../../icons/GitHubIcon.astro";
import { type Project } from "./projects";

interface Props {
  project: Project;
}

const { project } = Astro.props;
---

<div class="my-14">
  <div>
    <div class="mb-6">
      <h1
        class="text-gradient text-center font-bold text-3xl mb-5"
        transition:name={`title-${project.name}`}
      >
        {project.name}
      </h1>

      <div class="flex justify-center gap-x-5">
        <a
          href={project.githubLink}
          target="_blank"
          class="inline-flex items-center gap-x-4 bg-dark-gray rounded-md py-2 px-4"
        >
          <i class="w-6">
            <GitHubIcon />
          </i>
          Ver proyecto en GitHub
        </a>
      </div>
    </div>

    <Card class="mb-5">
      <div>
        <h2 class="text-2xl font-bold mb-3">Descripción</h2>
        <p>{project.description}</p>
      </div>
    </Card>

    <div class="flex justify-evenly flex-wrap mb-5 gap-5">
      {
        project.technologies.map(({ Icon, name }) => (
          <div class="flex items-center bg-dark-gray relative overflow-hidden p-2 rounded-md">
            <i class="flex w-5 h-5 mr-2">
              <Icon />
            </i>

            <p class="text-xs">{name}</p>
          </div>
        ))
      }
    </div>

    <Card class="mb-5">
      <div class="space-y-1">
        <h2 class="text-2xl font-bold mb-3">Características</h2>

        {
          project.features.map((feature) => (
            <p>
              <b>{feature.split(":")[0]}:</b> {feature.split(":")[1]}
            </p>
          ))
        }
      </div>
    </Card>

    <div>
      <h2 class="text-2xl text-center font-bold mb-3">Galería</h2>

      <div class="grid grid-cols-2 gap-5 max-md:grid-cols-1">
        {
          project.images.map((img) => (
            <Card>
              <img
                src={img.src}
                alt={img.alt}
                class="cursor-pointer gallery-image"
                data-src={img.src}
              />
            </Card>
          ))
        }
      </div>
    </div>
  </div>
</div>

<div id="modal" class="hidden inset-0 bg-black bg-opacity-75 items-center justify-center z-50">
  <div class="flex justify-center relative">
    <button
      id="close-modal"
      class="absolute top-2 right-2 text-2xl bg-neutral-800 w-10 h-10 rounded-md shadow-lg"
      >&times;
    </button>
    <img id="modal-image" src="" alt="-" class="max-w-full max-h-full" />
  </div>
</div>

<script>
  import type { string } from "astro:schema";

  document.addEventListener("DOMContentLoaded", () => {
    const images = document.querySelectorAll(".gallery-image") as NodeListOf<HTMLImageElement>;
    const modal = document.getElementById("modal");
    const modalImage = document.getElementById("modal-image") as HTMLImageElement;
    const closeModalButton = document.getElementById("close-modal");

    if (!images || !modal || !modalImage || !closeModalButton) {
      return;
    }

    const openModal = (imgSrc: string) => {
      modalImage.src = imgSrc;
      modal.classList.remove("hidden");
      modal.classList.add("fixed");
    };

    const closeModal = () => {
      modal.classList.add("hidden");
      modal.classList.remove("fixed");
    };

    images.forEach((image) => {
      image.addEventListener("click", (event) => {
        if (!event.target) {
          return;
        }
        const imgSrc = (event.target as HTMLImageElement).getAttribute("data-src");
        openModal(imgSrc || "");
      });
    });

    closeModalButton.addEventListener("click", closeModal);

    modal.addEventListener("click", (event) => {
      if (event.target === modal) {
        closeModal();
      }
    });
  });
</script>

<style>
  .fixed {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 50;
  }

  .bg-opacity-75 {
    background-color: rgba(0, 0, 0, 0.75);
  }

  button {
    border: none;
    color: white;
    font-size: 24px;
    cursor: pointer;
  }

  button:hover {
    color: #ccc;
  }
</style>
